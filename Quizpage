import 'package:flutter/material.dart';

class QuizPage extends StatefulWidget {
  final String department;

  const QuizPage({super.key, required this.department});

  @override
  State<QuizPage> createState() => _QuizPageState();
}

class _QuizPageState extends State<QuizPage> {
  // Sample question structure
  final List<Map<String, dynamic>> questions = [
    {
      'question': 'Flutter is a...?',
      'options': ['Programming', 'Framework', 'Tool', 'Al tool'],
      'correctAnswer': 0,
    },
    // Add more questions here
  ];

  int currentQuestionIndex = 0;
  List<int> userAnswers = [];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        leading: IconButton(
          icon: const Icon(Icons.arrow_back),
          onPressed: () => Navigator.pop(context),
        ),
        title: Text('${widget.department} Quiz'),
        backgroundColor: Colors.blue,
        foregroundColor: Colors.white,
      ),
      backgroundColor: Colors.grey[900],
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.stretch,
          children: [
            Card(
              color: Colors.blue[600],
              child: Padding(
                padding: const EdgeInsets.all(16.0),
                child: Text(
                  questions[currentQuestionIndex]['question'],
                  style: const TextStyle(
                    color: Colors.white,
                    fontSize: 18,
                    fontWeight: FontWeight.bold,
                  ),
                ),
              ),
            ),
            const SizedBox(height: 20),
            ...List.generate(
              4,
              (index) => Padding(
                padding: const EdgeInsets.only(bottom: 10),
                child: ElevatedButton(
                  style: ElevatedButton.styleFrom(
                    backgroundColor: Colors.grey[800],
                    padding: const EdgeInsets.all(16),
                  ),
                  onPressed: () {
                    setState(() {
                      if (currentQuestionIndex < questions.length) {
                        userAnswers.add(index);
                        if (currentQuestionIndex < questions.length - 1) {
                          currentQuestionIndex++;
                        }
                      }
                    });
                  },
                  child: Text(
                    questions[currentQuestionIndex]['options'][index],
                    style: const TextStyle(color: Colors.white),
                  ),
                ),
              ),
            ),
          ],
        ),
      ),
    );
  }
}
